/*
 * Copyright 2020-2023 Slawomir Czerwinski
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package it.czerwinski.intellij.wavefront.lang;

import com.intellij.lexer.FlexLexer;
import com.intellij.psi.TokenType;
import com.intellij.psi.tree.IElementType;
import it.czerwinski.intellij.wavefront.lang.psi.MtlSpecialTypes;
import it.czerwinski.intellij.wavefront.lang.psi.MtlTypes;

%%

%class MtlLexer
%implements FlexLexer
%unicode
%function advance
%type IElementType
%eof{  return;
%eof}

CRLF=[\r\n\f]+

COMMENT="#"[^\r\n\f]*[\r\n\f]

WHITE_SPACE=[\ \t]+

NEW_MATERIAL_KEYWORD="newmtl"

AMBIENT_COLOR_KEYWORD="Ka"
DIFFUSE_COLOR_KEYWORD="Kd"
SPECULAR_COLOR_KEYWORD="Ks"
TRANSMISSION_FILTER_KEYWORD="Tf"
EMISSION_COLOR_KEYWORD="Ke"

ILLUMINATION_KEYWORD="illum"
DISSOLVE_KEYWORD="d"
SPECULAR_EXPONENT_KEYWORD="Ns"
SHARPNESS_KEYWORD="sharpness"
OPTICAL_DENSITY_KEYWORD="Ni"
TRANSPARENCY_KEYWORD="Tr"
ROUGHNESS_KEYWORD="Pr"
METALNESS_KEYWORD="Pm"
SHEEN_KEYWORD="Ps"
CLEARCOAT_THICKNESS_KEYWORD="Pc"
CLEARCOAT_ROUGHNESS_KEYWORD="Pcr"

AMBIENT_COLOR_MAP_KEYWORD="map_Ka"
DIFFUSE_COLOR_MAP_KEYWORD="map_Kd"
SPECULAR_COLOR_MAP_KEYWORD="map_Ks"
EMISSION_COLOR_MAP_KEYWORD="map_Ke"
SPECULAR_EXPONENT_MAP_KEYWORD="map_Ns"
DISSOLVE_MAP_KEYWORD="map_d"
DISPLACEMENT_MAP_KEYWORD="disp"
STENCIL_DECAL_MAP_KEYWORD="decal"
ROUGHNESS_MAP_KEYWORD="map_Pr"
METALNESS_MAP_KEYWORD="map_Pm"
SHEEN_MAP_KEYWORD="map_Ps"
NORMAL_MAP_KEYWORD="norm"
BUMP_MAP_KEYWORD=(bump)|(map_bump)
REFLECTION_MAP_KEYWORD="refl"

BLEND_U_OPTION_NAME="-blendu"
BLEND_V_OPTION_NAME="-blendv"
COLOR_CORRECTION_OPTION_NAME="-cc"
CLAMP_OPTION_NAME="-clamp"
SCALAR_CHANNEL_OPTION_NAME="-imfchan"
VALUE_MODIFIER_OPTION_NAME="-mm"
OFFSET_OPTION_NAME="-o"
SCALE_OPTION_NAME="-s"
TURBULENCE_OPTION_NAME="-t"
RESOLUTION_OPTION_NAME="-texres"
BUMP_MULTIPLIER_OPTION_NAME="-bm"
REFLECTION_TYPE_OPTION_NAME="-type"

MATERIAL_NAME=[^\ \t\r\n\f]+
FLOAT="-"?((0)|([1-9][\d]*))("."[\d]+)?([Ee][+-]?[\d]+)?
INTEGER="-"?((0)|([1-9][\d]*))
OPTION_START="-"[A-Za-z]*
ILLUMINATION_VALUE=([0-9])|(10)
FLAG=(on)|(off)
SCALAR_CHANNEL=(r)|(g)|(b)|(m)|(l)|(z)
REFLECTION_TYPE=(sphere)|(cube_top)|(cube_bottom)|(cube_front)|(cube_back)|(cube_left)|(cube_right)
TEXTURE_FILE_NAME=[^\ \t\r\n\f]+

%state WAITING_MATERIAL_NAME
%state WAITING_FLOAT
%state WAITING_FLAG
%state WAITING_ILLUMINATION_VALUE
%state WAITING_SCALAR_CHANNEL
%state WAITING_REFLECTION_TYPE_OPTION_NAME
%state WAITING_REFLECTION_TYPE
%state WAITING_INTEGER_OPTION
%state WAITING_OPTION_OR_TEXTURE
%state WAITING_FLOAT_OR_OPTION_OR_TEXTURE
%state END

%state INVALID

%%

<YYINITIAL> {COMMENT} { yybegin(YYINITIAL); return MtlTypes.COMMENT; }

<YYINITIAL> {NEW_MATERIAL_KEYWORD} { yybegin(WAITING_MATERIAL_NAME); return MtlTypes.NEW_MATERIAL_KEYWORD; }

<YYINITIAL> {AMBIENT_COLOR_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.AMBIENT_COLOR_KEYWORD; }
<YYINITIAL> {DIFFUSE_COLOR_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.DIFFUSE_COLOR_KEYWORD; }
<YYINITIAL> {SPECULAR_COLOR_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.SPECULAR_COLOR_KEYWORD; }
<YYINITIAL> {TRANSMISSION_FILTER_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.TRANSMISSION_FILTER_KEYWORD; }
<YYINITIAL> {EMISSION_COLOR_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.EMISSION_COLOR_KEYWORD; }

<YYINITIAL> {ILLUMINATION_KEYWORD} { yybegin(WAITING_ILLUMINATION_VALUE); return MtlTypes.ILLUMINATION_KEYWORD; }
<YYINITIAL> {DISSOLVE_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.DISSOLVE_KEYWORD; }
<YYINITIAL> {SPECULAR_EXPONENT_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.SPECULAR_EXPONENT_KEYWORD; }
<YYINITIAL> {SHARPNESS_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.SHARPNESS_KEYWORD; }
<YYINITIAL> {OPTICAL_DENSITY_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.OPTICAL_DENSITY_KEYWORD; }
<YYINITIAL> {TRANSPARENCY_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.TRANSPARENCY_KEYWORD; }
<YYINITIAL> {ROUGHNESS_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.ROUGHNESS_KEYWORD; }
<YYINITIAL> {METALNESS_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.METALNESS_KEYWORD; }
<YYINITIAL> {SHEEN_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.SHEEN_KEYWORD; }
<YYINITIAL> {CLEARCOAT_THICKNESS_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.CLEARCOAT_THICKNESS_KEYWORD; }
<YYINITIAL> {CLEARCOAT_ROUGHNESS_KEYWORD} { yybegin(WAITING_FLOAT); return MtlTypes.CLEARCOAT_ROUGHNESS_KEYWORD; }

<YYINITIAL> {AMBIENT_COLOR_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.AMBIENT_COLOR_MAP_KEYWORD; }
<YYINITIAL> {DIFFUSE_COLOR_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.DIFFUSE_COLOR_MAP_KEYWORD; }
<YYINITIAL> {SPECULAR_COLOR_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.SPECULAR_COLOR_MAP_KEYWORD; }
<YYINITIAL> {EMISSION_COLOR_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.EMISSION_COLOR_MAP_KEYWORD; }
<YYINITIAL> {SPECULAR_EXPONENT_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.SPECULAR_EXPONENT_MAP_KEYWORD; }
<YYINITIAL> {DISSOLVE_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.DISSOLVE_MAP_KEYWORD; }
<YYINITIAL> {DISPLACEMENT_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.DISPLACEMENT_MAP_KEYWORD; }
<YYINITIAL> {STENCIL_DECAL_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.STENCIL_DECAL_MAP_KEYWORD; }
<YYINITIAL> {ROUGHNESS_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.ROUGHNESS_MAP_KEYWORD; }
<YYINITIAL> {METALNESS_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.METALNESS_MAP_KEYWORD; }
<YYINITIAL> {SHEEN_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.SHEEN_MAP_KEYWORD; }
<YYINITIAL> {NORMAL_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.NORMAL_MAP_KEYWORD; }
<YYINITIAL> {BUMP_MAP_KEYWORD} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.BUMP_MAP_KEYWORD; }
<YYINITIAL> {REFLECTION_MAP_KEYWORD} { yybegin(WAITING_REFLECTION_TYPE_OPTION_NAME); return MtlTypes.REFLECTION_MAP_KEYWORD; }

<YYINITIAL> [^\ \t\r\n\f]+ { yybegin(INVALID); return MtlSpecialTypes.UNKNOWN_KEYWORD; }

<WAITING_MATERIAL_NAME> {WHITE_SPACE} { yybegin(WAITING_MATERIAL_NAME); return TokenType.WHITE_SPACE; }
<WAITING_MATERIAL_NAME> {MATERIAL_NAME} { yybegin(END); return MtlTypes.MATERIAL_NAME; }

<WAITING_FLOAT> {WHITE_SPACE} { yybegin(WAITING_FLOAT); return TokenType.WHITE_SPACE; }
<WAITING_FLOAT> {FLOAT} { yybegin(WAITING_FLOAT); return MtlTypes.FLOAT; }

<WAITING_FLAG> {WHITE_SPACE} { yybegin(WAITING_FLAG); return TokenType.WHITE_SPACE; }
<WAITING_FLAG> {FLAG} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.FLAG; }
<WAITING_FLAG> [^\ \t\r\n\f]+ { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlSpecialTypes.UNKNOWN_FLAG; }

<WAITING_ILLUMINATION_VALUE> {WHITE_SPACE} { yybegin(WAITING_ILLUMINATION_VALUE); return TokenType.WHITE_SPACE; }
<WAITING_ILLUMINATION_VALUE> {ILLUMINATION_VALUE} { yybegin(END); return MtlTypes.ILLUMINATION_VALUE; }
<WAITING_ILLUMINATION_VALUE> [^\ \t\r\n\f]+ { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlSpecialTypes.UNKNOWN_ILLUMINATION_VALUE; }

<WAITING_SCALAR_CHANNEL> {WHITE_SPACE} { yybegin(WAITING_SCALAR_CHANNEL); return TokenType.WHITE_SPACE; }
<WAITING_SCALAR_CHANNEL> {SCALAR_CHANNEL} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.SCALAR_CHANNEL; }
<WAITING_SCALAR_CHANNEL> [^\ \t\r\n\f]+ { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlSpecialTypes.UNKNOWN_SCALAR_CHANNEL; }

<WAITING_REFLECTION_TYPE_OPTION_NAME> {WHITE_SPACE} { yybegin(WAITING_REFLECTION_TYPE_OPTION_NAME); return TokenType.WHITE_SPACE; }
<WAITING_REFLECTION_TYPE_OPTION_NAME> {REFLECTION_TYPE_OPTION_NAME} { yybegin(WAITING_REFLECTION_TYPE); return MtlTypes.REFLECTION_TYPE_OPTION_NAME; }
<WAITING_REFLECTION_TYPE_OPTION_NAME> [^\ \t\r\n\f]+ { yybegin(WAITING_REFLECTION_TYPE); return MtlSpecialTypes.UNKNOWN_REFLECTION_TYPE_OPTION; }

<WAITING_REFLECTION_TYPE> {WHITE_SPACE} { yybegin(WAITING_REFLECTION_TYPE); return TokenType.WHITE_SPACE; }
<WAITING_REFLECTION_TYPE> {REFLECTION_TYPE} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.REFLECTION_TYPE; }
<WAITING_REFLECTION_TYPE> [^\ \t\r\n\f]+ { yybegin(WAITING_REFLECTION_TYPE); return MtlSpecialTypes.UNKNOWN_REFLECTION_TYPE; }

<WAITING_INTEGER_OPTION> {WHITE_SPACE} { yybegin(WAITING_INTEGER_OPTION); return TokenType.WHITE_SPACE; }
<WAITING_INTEGER_OPTION> {INTEGER} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlTypes.INTEGER; }

<WAITING_OPTION_OR_TEXTURE> {WHITE_SPACE} { yybegin(WAITING_OPTION_OR_TEXTURE); return TokenType.WHITE_SPACE; }
<WAITING_OPTION_OR_TEXTURE> {BLEND_U_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.BLEND_U_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {BLEND_V_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.BLEND_V_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {COLOR_CORRECTION_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.COLOR_CORRECTION_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {CLAMP_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.CLAMP_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {SCALAR_CHANNEL_OPTION_NAME} { yybegin(WAITING_SCALAR_CHANNEL); return MtlTypes.SCALAR_CHANNEL_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {VALUE_MODIFIER_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.VALUE_MODIFIER_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {OFFSET_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.OFFSET_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {SCALE_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.SCALE_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {TURBULENCE_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.TURBULENCE_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {RESOLUTION_OPTION_NAME} { yybegin(WAITING_INTEGER_OPTION); return MtlTypes.RESOLUTION_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {BUMP_MULTIPLIER_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.BUMP_MULTIPLIER_OPTION_NAME; }
<WAITING_OPTION_OR_TEXTURE> {OPTION_START} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlSpecialTypes.UNKNOWN_OPTION; }
<WAITING_OPTION_OR_TEXTURE> {TEXTURE_FILE_NAME} { yybegin(END); return MtlTypes.TEXTURE_FILE; }

<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {WHITE_SPACE} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return TokenType.WHITE_SPACE; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {FLOAT} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.FLOAT; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {BLEND_U_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.BLEND_U_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {BLEND_V_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.BLEND_V_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {COLOR_CORRECTION_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.COLOR_CORRECTION_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {CLAMP_OPTION_NAME} { yybegin(WAITING_FLAG); return MtlTypes.CLAMP_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {SCALAR_CHANNEL_OPTION_NAME} { yybegin(WAITING_SCALAR_CHANNEL); return MtlTypes.SCALAR_CHANNEL_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {VALUE_MODIFIER_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.VALUE_MODIFIER_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {OFFSET_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.OFFSET_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {SCALE_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.SCALE_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {TURBULENCE_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.TURBULENCE_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {RESOLUTION_OPTION_NAME} { yybegin(WAITING_INTEGER_OPTION); return MtlTypes.RESOLUTION_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {BUMP_MULTIPLIER_OPTION_NAME} { yybegin(WAITING_FLOAT_OR_OPTION_OR_TEXTURE); return MtlTypes.BUMP_MULTIPLIER_OPTION_NAME; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {OPTION_START} { yybegin(WAITING_OPTION_OR_TEXTURE); return MtlSpecialTypes.UNKNOWN_OPTION; }
<WAITING_FLOAT_OR_OPTION_OR_TEXTURE> {TEXTURE_FILE_NAME} { yybegin(END); return MtlTypes.TEXTURE_FILE; }

{CRLF} { yybegin(YYINITIAL); return TokenType.WHITE_SPACE; }

<END> [^\ \t\r\n\f]+ { yybegin(INVALID); return TokenType.BAD_CHARACTER; }

({WHITE_SPACE})+ { return TokenType.WHITE_SPACE; }

[^\ \t\r\n\f]+ { yybegin(INVALID); return TokenType.BAD_CHARACTER; }

. { yybegin(INVALID); return TokenType.BAD_CHARACTER; }
