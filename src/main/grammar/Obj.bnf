/*
 * Copyright 2020-2021 Slawomir Czerwinski
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{
  parserClass="it.czerwinski.intellij.wavefront.lang.parser.ObjParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Obj"
  psiImplClassSuffix="Impl"
  psiPackage="it.czerwinski.intellij.wavefront.lang.psi"
  psiImplPackage="it.czerwinski.intellij.wavefront.lang.psi.impl"

  elementTypeHolderClass="it.czerwinski.intellij.wavefront.lang.psi.ObjTypes"
  elementTypeClass="it.czerwinski.intellij.wavefront.lang.psi.ObjElementType"
  tokenTypeClass="it.czerwinski.intellij.wavefront.lang.psi.ObjTokenType"
}

objFile ::= (groupingItem_|item_)*

private item_ ::= (
  vertex | textureCoordinates | vertexNormal
  | point | line | face
  | smoothShading
  | materialFileReference | materialReference
  | COMMENT | CRLF
)

private groupingItem_ ::= (object|group)

object ::= (OBJECT_KEYWORD objectOrGroupIdentifier) + item_* {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjGroupingElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjGroupingElement"
}
group ::= (GROUP_KEYWORD objectOrGroupIdentifier) + item_* {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjGroupingElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjGroupingElement"
}

objectOrGroupIdentifier ::= OBJECT_OR_GROUP_NAME {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjObjectOrGroupIdentifierElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjObjectOrGroupIdentifierElement"
}

vertex ::= (VERTEX_KEYWORD FLOAT FLOAT FLOAT FLOAT?) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}
textureCoordinates ::= (TEXTURE_COORDINATES_KEYWORD FLOAT FLOAT? FLOAT?)  {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}
vertexNormal ::= (VERTEX_NORMAL_KEYWORD FLOAT FLOAT FLOAT)  {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}

face ::= (FACE_KEYWORD faceVertex faceVertex faceVertex + (faceVertex)*) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjFaceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjFaceElement"
}
line ::= (LINE_KEYWORD vertexIndex vertexIndex + (vertexIndex)*)
point ::= (POINT_KEYWORD vertexIndex)

faceVertex ::=
  (vertexIndex VERTEX_INDEX_SEPARATOR textureCoordinatesIndex? VERTEX_INDEX_SEPARATOR vertexNormalIndex)
  | (vertexIndex VERTEX_INDEX_SEPARATOR textureCoordinatesIndex)
  | (vertexIndex)

vertexIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}
textureCoordinatesIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}
vertexNormalIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}

smoothShading ::= (SMOOTH_SHADING_KEYWORD FLAG) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjFlagElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjFlagElement"
}

materialFileReference ::= (MATERIAL_FILE_REF_KEYWORD MATERIAL_FILE_NAME) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjMaterialFileReferenceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjMaterialFileReferenceElement"
}

materialReference ::= (MATERIAL_REFERENCE_KEYWORD MATERIAL_NAME) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjMaterialReferenceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjMaterialReferenceElement"
}
