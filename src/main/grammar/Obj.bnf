/*
 * Copyright 2020-2023 Slawomir Czerwinski
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

{
  parserClass="it.czerwinski.intellij.wavefront.lang.parser.ObjParser"

  extends="com.intellij.extapi.psi.ASTWrapperPsiElement"

  psiClassPrefix="Obj"
  psiImplClassSuffix="Impl"
  psiPackage="it.czerwinski.intellij.wavefront.lang.psi"
  psiImplPackage="it.czerwinski.intellij.wavefront.lang.psi.impl"

  elementTypeHolderClass="it.czerwinski.intellij.wavefront.lang.psi.ObjTypes"
  elementTypeClass="it.czerwinski.intellij.wavefront.lang.psi.ObjElementType"
  tokenTypeClass="it.czerwinski.intellij.wavefront.lang.psi.ObjTokenType"
}

objFile ::= (groupingElement_ | item_ | commentBlock)*

private item_ ::= (
  vertex | textureCoordinates | vertexNormal
  | point | line | face
  | freeFormItem_
  | smoothingGroup
  | materialFileReferenceStatement | materialReference
)

// Comments:

commentBlock ::= (commentLine)+ {
  implements = "it.czerwinski.intellij.wavefront.lang.psi.CommentElement"
}
commentLine ::= (COMMENT_SYMBOL COMMENT) {
  implements = "it.czerwinski.intellij.wavefront.lang.psi.CommentElement"
}

// Grouping:

private groupingElement_ ::= (object|group)

documentation ::= (commentBlock)? {
  implements = "it.czerwinski.intellij.wavefront.lang.psi.CommentElement"
}

object ::= (documentation OBJECT_KEYWORD objectOrGroupIdentifier) (commentBlock? item_)* {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjGroupingElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjGroupingElement"
}
group ::= (documentation GROUP_KEYWORD objectOrGroupIdentifier) (commentBlock? item_)* {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjGroupingElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjGroupingElement"
}

objectOrGroupIdentifier ::= OBJECT_OR_GROUP_NAME {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjObjectOrGroupIdentifierElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjObjectOrGroupIdentifierElement"
}

// Vertex data:

vertex ::= (VERTEX_KEYWORD FLOAT FLOAT FLOAT FLOAT?) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}
textureCoordinates ::= (TEXTURE_COORDINATES_KEYWORD FLOAT FLOAT? FLOAT?)  {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}
vertexNormal ::= (VERTEX_NORMAL_KEYWORD FLOAT FLOAT FLOAT)  {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}

// Elements:

face ::= (FACE_KEYWORD faceVertex faceVertex faceVertex (faceVertex)*) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjFaceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjFaceElement"
}
line ::= (LINE_KEYWORD lineVertex lineVertex (lineVertex)*) {
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjLineElement"
}
point ::= (POINT_KEYWORD vertexIndex)

faceVertex ::=
  (vertexIndex VERTEX_INDEX_SEPARATOR textureCoordinatesIndex? VERTEX_INDEX_SEPARATOR vertexNormalIndex)
  | (vertexIndex VERTEX_INDEX_SEPARATOR textureCoordinatesIndex)
  | (vertexIndex)
lineVertex ::=
  (vertexIndex VERTEX_INDEX_SEPARATOR textureCoordinatesIndex)
  | (vertexIndex)

vertexIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}
textureCoordinatesIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}
vertexNormalIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}

// Free-form geometry:

private freeFormItem_ ::= (
  freeFormPoint | freeFormType | freeFormDegree | freeFormBasisMatrix | freeFormStepSize
  | freeFormCurve | freeForm2DCurve | freeFormSurface
)

freeFormPoint ::= (FREE_FORM_POINT_KEYWORD FLOAT FLOAT? FLOAT?) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjVectorElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjVectorElement"
}

freeFormType ::= (FREE_FORM_TYPE_KEYWORD FREE_FORM_RATIONAL_KEYWORD? FREE_FORM_TYPE_NAME) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjFreeFormTypeElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjFreeFormTypeElement"
}
freeFormDegree ::= (FREE_FORM_DEGREE_KEYWORD INTEGER INTEGER? INTEGER?) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIntListElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIntListElement"
}
freeFormBasisMatrix ::= (FREE_FORM_BASIS_MATRIX_KEYWORD FREE_FORM_DIRECTION FLOAT+) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjFreeFormBasisMatrixElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjFreeFormBasisMatrixElement"
}
freeFormStepSize ::= (FREE_FORM_STEP_SIZE_KEYWORD INTEGER INTEGER?) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIntListElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIntListElement"
}

freeFormCurve ::= (
  (freeFormCurveDefinition)
  (commentBlock? freeFormBodyStatement_)*
  (commentBlock? freeFormBodyEnd)
)
freeFormCurveDefinition ::= (FREE_FORM_CURVE_KEYWORD FLOAT FLOAT vertexIndex vertexIndex vertexIndex*)

freeForm2DCurve ::= (
  (freeForm2DCurveDefinition)
  (commentBlock? freeFormBodyStatement_)*
  (commentBlock? freeFormBodyEnd)
)
freeForm2DCurveDefinition ::= (FREE_FORM_2D_CURVE_KEYWORD freeFormPointIndex freeFormPointIndex freeFormPointIndex*)

freeFormSurface ::= (
  (freeFormSurfaceDefinition)
  (commentBlock? freeFormBodyStatement_)*
  (commentBlock? freeFormBodyEnd)
)
freeFormSurfaceDefinition ::= (FREE_FORM_SURFACE_KEYWORD FLOAT FLOAT FLOAT FLOAT faceVertex+)

private freeFormBodyStatement_ ::= (
  freeFormParameters
  | freeFormOuterTrimmingLoop | freeFormInnerTrimmingLoop
  | freeFormSpecialCurve | freeFormSpecialPoints
)

freeFormParameters ::= (FREE_FORM_PARAMETERS_KEYWORD FREE_FORM_DIRECTION FLOAT FLOAT FLOAT*) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjFreeFormParametersElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjFreeFormParametersElement"
}

freeFormOuterTrimmingLoop ::= (FREE_FORM_OUTER_TRIMMING_LOOP_KEYWORD curveReference+)
freeFormInnerTrimmingLoop ::= (FREE_FORM_INNER_TRIMMING_LOOP_KEYWORD curveReference+)

curveReference ::= (FLOAT FLOAT curveIndex) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjCurveReferenceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjCurveReferenceElement"
}

freeFormSpecialCurve ::= (FREE_FORM_SPECIAL_CURVE_KEYWORD curveReference+)
freeFormSpecialPoints ::= (FREE_FORM_SPECIAL_POINTS_KEYWORD freeFormPointIndex+)

freeFormBodyEnd ::= (FREE_FORM_BODY_END_KEYWORD)

freeFormPointIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}
curveIndex ::= (INDEX) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjIndexElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjIndexElement"
}

// Smoothing:

smoothingGroup ::= (SMOOTHING_GROUP_KEYWORD SMOOTHING_GROUP_NUMBER) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjSmoothingGroupElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjSmoothingGroupElement"
}

// Materials:

materialFileReferenceStatement ::= (MATERIAL_FILE_REF_KEYWORD materialFileReference materialFileReference*)

materialFileReference ::= (MATERIAL_FILE_NAME) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjMaterialFileReferenceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjMaterialFileReferenceElement"
}

materialReference ::= (MATERIAL_REFERENCE_KEYWORD MATERIAL_NAME) {
  mixin = "it.czerwinski.intellij.wavefront.lang.psi.impl.ObjMaterialReferenceElementImpl"
  implements = "it.czerwinski.intellij.wavefront.lang.psi.ObjMaterialReferenceElement"
}
